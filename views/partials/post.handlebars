{{! Partial for a single post }}
<div class="post">
    <div class="post-header">
        <div class="post-avatar">
            <img src="{{#if avatar_url}}{{avatar_url}}{{else}}/avatar/{{username}}{{/if}}" alt="{{username}}'s avatar">
        </div>
        <div class="post-user-info">
            <p class="username"><a href="/profile/{{username}}">{{username}}</a></p>
            <p class="post-timestamp">{{timestamp}}</p>
        </div>
    </div>
    <div class="post-content preserve-newlines">
        <h3>{{title}}</h3>
        <p>{{{formatContent content}}}</p>
        {{#if tagged_users}}
        <p class="tagged-users">Tagged: {{#each (split tagged_users ',')}}@<a href="/profile/{{this}}">{{this}}</a> {{/each}}</p>
        {{/if}}
        {{#if image_url}}
            <img src="{{image_url}}" alt="Post image" class="post-thumbnail" onclick="openModal('{{image_url}}')">
        {{/if}}
        <p>Likes: <span id="likes-count-{{id}}">{{likes}}</span></p>
        <div class="post-status-bar">
            {{#if loggedIn}}
            <button class="{{#if liked}}unlike-button{{else}}like-button{{/if}}" data-id="{{id}}"
                onclick="handleLikeClick(event)">
                {{#if liked}}Unlike{{else}}Like{{/if}}
            </button>
            {{/if}}
            {{#ifCond username user.username}}
            <button class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)"><i
                    class="fas fa-trash-alt"></i> Delete</button>
            {{/ifCond}}
        </div>
    </div>
</div>

<div id="imageModal" class="modal">
    <span class="close" onclick="closeModal()">&times;</span>
    <img class="modal-content" id="fullImage">
    <div id="caption"></div>
</div>

<script>
    function openModal(imageUrl) {
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('fullImage');
        modal.style.display = 'block';
        modalImg.src = imageUrl;
    }

    function closeModal() {
        const modal = document.getElementById('imageModal');
        modal.style.display = 'none';
    }

    async function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');

        try {
            const response = await fetch(`/like/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin'
            });
            if (response.ok) {
                const result = await response.json();
                document.getElementById(`likes-count-${postId}`).innerText = result.likes;
                if (result.liked) {
                    event.target.innerText = 'Unlike';
                    event.target.classList.add('unlike-button');
                    event.target.classList.remove('like-button');
                } else {
                    event.target.innerText = 'Like';
                    event.target.classList.add('like-button');
                    event.target.classList.remove('unlike-button');
                }
            } else {
                console.error('Failed to like the post');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');

        try {
            const response = await fetch(`/delete/${postId}`, {
                method: 'POST'
            });
            if (response.ok) {
                buttonElement.closest('.post').remove();
            } else {
                console.error('Failed to delete the post');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>